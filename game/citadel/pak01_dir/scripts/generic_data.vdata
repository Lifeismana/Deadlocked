<!-- kv3 encoding:text:version{e21c7f3c-8a33-41c5-9977-a76d3a32aa0d} format:generic:version{7412167c-06e9-4698-aff2-e63eb59037e7} -->
{
	generic_data_type = "CitadelGenericData_t"
	m_mapDamageFlash = 
	{
		EFlashType_BulletDamage = 
		{
			m_flDuration = 0.075000
			m_flCoverage = 0.750000
			m_flHardness = 0.350000
			m_flBrightness = 1.200000
			m_Color = 
			[
				255,
				0,
				0,
			]
		}
		EFlashType_TechDamage = 
		{
			m_flDuration = 0.100000
			m_flCoverage = 0.650000
			m_flHardness = 0.500000
			m_flBrightness = 1.500000
			m_Color = 
			[
				0,
				80,
				243,
			]
		}
		EFlashType_Healing = 
		{
			m_flDuration = 1.000000
			m_flCoverage = 0.500000
			m_flHardness = 0.000000
			m_flBrightness = 1.200000
			m_Color = 
			[
				0,
				195,
				45,
			]
		}
		EFlashType_CritDamage = 
		{
			m_flDuration = 0.125000
			m_flCoverage = 0.750000
			m_flHardness = 0.350000
			m_flBrightness = 1.700000
			m_Color = 
			[
				255,
				255,
				0,
			]
		}
		EFlashType_MeleeActivate = 
		{
			m_flDuration = 0.275000
			m_flCoverage = 0.500000
			m_Color = 
			[
				254,
				101,
				40,
			]
			m_flBrightness = 3.000000
			m_flHardness = 0.000000
		}
	}
	m_GlitchSettings = 
	{
		m_flStrength = 1.000000
		m_nQuantizeType = 2.000000
		m_flQuantizeScale = 0.500000
		m_flQuantizeStrength = 0.200000
		m_flFrameRate = 5.000000
		m_flSpeed = 10.000000
		m_flJumpStrength = 1.000000
		m_flDistortStrength = 1.250000
		m_flWhiteNoiseStrength = 3.000000
		m_flScanlineStrength = 1.500000
		m_flBreakupStrength = 0.000000
	}
	m_LaneInfo = 
	[
		
		{
			m_strLaneName = "Yellow"
			m_strCSSClass = "yellowLane"
			m_Color = 
			[
				200,
				200,
				0,
			]
			m_MinimapColorOverride = 
			[
				255,
				255,
				0,
			]
		},
		
		{
			m_strLaneName = "Yellow + Orange"
			m_Color = 
			[
				0,
				0,
				0,
			]
		},
		
		{
			m_strLaneName = "Orange"
			m_strCSSClass = "orangeLane"
			m_Color = 
			[
				220,
				79,
				0,
			]
			m_MinimapColorOverride = 
			[
				255,
				93,
				0,
			]
		},
		
		{
			m_strLaneName = "Blue"
			m_strCSSClass = "blueLane"
			m_Color = 
			[
				17,
				174,
				255,
			]
		},
		
		{
			m_strLaneName = " + Purple"
			m_Color = 
			[
				0,
				0,
				0,
			]
		},
		
		{
			m_strLaneName = "Purple"
			m_strCSSClass = "purpleLane"
			m_Color = 
			[
				255,
				6,
				255,
			]
		},
	]
	m_DamageReceivedSounds = 
	{
		m_strDamageReceiveDefault = soundevent:"Damage.Receive.Default"
		m_strDamageReceiveNPC = soundevent:"Damage.Receive.NPC"
		m_strDamageReceiveDOT = soundevent:"Damage.Receive.DOT"
		m_strDamageReceiveMeleeNPC = soundevent:"Damage.Receive.Melee.NPC"
		m_strDamageReceiveMelee = soundevent:"Damage.Receive.Melee"
		m_strDamageReceiveShield = soundevent:"Damage.Receive.Shield"
	}
	m_mapDamageIndicatorParamSets = 
	{
		EDamageIndicatorSet_Normal = 
		{
			m_strDamageDealtNormal = soundevent:"HitIndicator.Base"
			m_strDamageDealtPoison = soundevent:"HitIndicator.Poison"
			m_strDamageDealtToInvuln = soundevent:"HitIndicator.Invulnerable"
			m_strDamageDealtToShield = soundevent:"HitIndicator.Shield"
			m_strDamageDealtCrit = soundevent:"HitIndicator.Crit"
			m_strDamageDealtBuffed = soundevent:"HitIndicator.BuffedShot"
			m_strDamageDealtToLowArmor = soundevent:"HitIndicator.Armor.Low"
			m_strDamageDealtToMediumArmor = soundevent:"HitIndicator.Armor.Med"
			m_strDamageDealtToHighArmor = soundevent:"HitIndicator.Armor.High"
		}
		EDamageIndicatorSet_MinionDealt = 
		{
			m_strDamageDealtNormal = soundevent:"HitIndicator.Base.Attenuated"
			m_strDamageDealtToInvuln = soundevent:"HitIndicator.Invulnerable.Attenuated"
			m_strDamageDealtToShield = soundevent:"HitIndicator.Shield.Attenuated"
			m_strDamageDealtCrit = soundevent:"HitIndicator.Crit.Attenuated"
			m_strDamageDealtBuffed = soundevent:"HitIndicator.BuffedShot.Attenuated"
			m_strDamageDealtToLowArmor = soundevent:"HitIndicator.Armor.Low.Attenuated"
			m_strDamageDealtToMediumArmor = soundevent:"HitIndicator.Armor.Med.Attenuated"
			m_strDamageDealtToHighArmor = soundevent:"HitIndicator.Armor.High.Attenuated"
			m_strDamageDealtPoison = soundevent:"HitIndicator.Poison.Attenuated"
		}
		EDamageIndicatorSet_DOT = 
		{
			m_strDamageDealtNormal = soundevent:"HitIndicator.Base.Attenuated"
			m_strDamageDealtToInvuln = soundevent:"HitIndicator.Invulnerable.Attenuated"
			m_strDamageDealtToShield = soundevent:"HitIndicator.Shield.Attenuated"
			m_strDamageDealtCrit = soundevent:"HitIndicator.Crit.Attenuated"
			m_strDamageDealtBuffed = soundevent:"HitIndicator.BuffedShot.Attenuated"
			m_strDamageDealtToLowArmor = soundevent:"HitIndicator.Armor.Low.Attenuated"
			m_strDamageDealtToMediumArmor = soundevent:"HitIndicator.Armor.Med.Attenuated"
			m_strDamageDealtToHighArmor = soundevent:"HitIndicator.Armor.High.Attenuated"
			m_strDamageDealtPoison = soundevent:"HitIndicator.Poison.Attenuated"
		}
		EDamageIndicatorSet_TroopersAndNeutrals = 
		{
			m_strDamageDealtNormal = soundevent:"HitIndicator.Base.Attenuated"
			m_strDamageDealtCrit = soundevent:"HitIndicator.Crit.Attenuated"
			m_strDamageDealtPoison = soundevent:"HitIndicator.Poison.Attenuated"
			m_strDamageDealtToInvuln = soundevent:"HitIndicator.Invulnerable.Attenuated"
			m_strDamageDealtToShield = soundevent:"HitIndicator.Shield.Attenuated"
			m_strDamageDealtToLowArmor = soundevent:"HitIndicator.Armor.Low.Attenuated"
			m_strDamageDealtToMediumArmor = soundevent:"HitIndicator.Armor.Med.Attenuated"
			m_strDamageDealtToHighArmor = soundevent:"HitIndicator.Armor.High.Attenuated"
			m_strDamageDealtBuffed = soundevent:"HitIndicator.BuffedShot.Attenuated"
		}
	}
	m_DefaultDOF = 
	{
		m_flDofNearBlurry = 0.000000
		m_flDofNearCrisp = 0.000000
		m_flDofFarBlurry = 0.000000
		m_flDofFarCrisp = 0.000000
	}
	m_NewPlayerMetrics = 
	[
		
		{
			m_strSkillTierName = "Bronze"
			m_NetWorth = 1000
			m_DamageTaken = 6600
			m_BossDamage = 300
			m_PlayerDamage = 900
			m_LastHits = 1
			m_OrbsSecured = 1
			m_OrbsDenied = 1
			m_AbilitiesUpgraded = 1
			m_ModsPurchased = 1
		},
		
		{
			m_strSkillTierName = "Silver"
			m_NetWorth = 1000
			m_DamageTaken = 5800
			m_BossDamage = 400
			m_PlayerDamage = 1400
			m_LastHits = 1
			m_OrbsSecured = 1
			m_OrbsDenied = 1
			m_AbilitiesUpgraded = 1
			m_ModsPurchased = 1
		},
		
		{
			m_strSkillTierName = "Gold"
			m_NetWorth = 1000
			m_DamageTaken = 5000
			m_BossDamage = 600
			m_PlayerDamage = 1800
			m_LastHits = 1
			m_OrbsSecured = 1
			m_OrbsDenied = 1
			m_AbilitiesUpgraded = 1
			m_ModsPurchased = 1
		},
		
		{
			m_strSkillTierName = "Platinum"
			m_NetWorth = 1000
			m_DamageTaken = 4600
			m_BossDamage = 700
			m_PlayerDamage = 2300
			m_LastHits = 1
			m_OrbsSecured = 1
			m_OrbsDenied = 1
			m_AbilitiesUpgraded = 1
			m_ModsPurchased = 1
		},
	]
	m_MinimapTeamRebelsColor = 
	[
		58,
		91,
		66,
	]
	m_MinimapTeamCombineColor = 
	[
		83,
		51,
		51,
	]
	m_HeroTestingTargetDummyUpgrades = 
	[
		"upgrade_toughness_2",
		"upgrade_health_regen_1",
		"upgrade_toughness_3",
		"upgrade_health_percent_large",
		"upgrade_out_of_combat_health_regen",
		"upgrade_zipine_mastery",
	]
	m_mapStatTypeImages = 
	{
		EBaseHealthRegen = "file://{images}/upgrades/mods_armor/health_regen.psd"
		EBulletArmorDamageReduction = "file://{images}/upgrades/mods_armor/bullet_armor.psd"
		ETechArmorDamageReduction = "file://{images}/upgrades/mods_armor/tech_armor.psd"
	}
	m_nItemPricePerTier = 
	[
		0,
		500,
		1200,
		3000,
		6500,
	]
	m_AimSpringStrength = 
	[
		0.000000,
		2.000000,
		10.000000,
		300.000000,
	]
	m_IdolParams = 
	{
		m_IdolModel = resource_name:"models/props_gameplay/idol_urn/idol_urn.vmdl"
		m_strLoopingSequenceName = "golden_idol_idle"
		m_ParachuteModel = resource_name:"models/props_gameplay/gold_crate_parachute.vmdl"
		m_CrateModel = resource_name:"models/props_gameplay/gold_crate.vmdl"
		m_IdolReturnLocationParticle = resource_name:"particles/environment/soul_jar_return_location.vpcf"
		m_flIdolReturnLocationParticleScale = 2.000000
	}
	m_TargetingSpringStrength = 
	[
		0.000000,
		2.000000,
		10.000000,
		30.000000,
	]
	m_CurrencyTypeSounds = 
	{
		EAbilityPoints = 
		{
			m_mapSourceSounds = 
			{
				EBossKill = soundevent:"Player.AcquireAp"
				ECheats = soundevent:"Player.AcquireAp"
				ELevelUp = soundevent:"Player.AcquireAp"
			}
		}
		EGold = 
		{
			m_mapSourceSounds = 
			{
				EItemSale = soundevent:""
				ETreasureChest = soundevent:""
				EOrbPlayer = soundevent:"Player.ClaimOrb"
				EOrbDeny = soundevent:"Player.ClaimOrb"
				EOrbLaneTrooper = soundevent:"Player.ClaimOrb"
				EOrbNeutralTrooper = soundevent:"Player.ClaimOrb"
				EOrbTier1TrooperBoss = soundevent:"Player.ClaimOrb"
				EOrbTier2TrooperBoss = soundevent:"Player.ClaimOrb"
				EOrbTier3TrooperBoss = soundevent:"Player.ClaimOrb"
				EOrbBaseSentry = soundevent:"Player.ClaimOrb"
				EOrbDeployable = soundevent:"Player.ClaimOrb"
				EOrbTrophyKill = soundevent:"Player.ClaimOrb"
				EOrbTreasureChest = soundevent:"Player.ClaimOrb"
				ENeutralWorldPickup = soundevent:"Neutral.Bounty.Pickup"
				EItemPurchase = soundevent:"Player.PurchaseUpgrade"
				EItemUpgrade = soundevent:"Player.PurchaseUpgrade"
			}
		}
	}
	m_UISounds = 
	{
		EMainMenuHover = soundevent:"UI.MainMenu.Hover"
		EMainMenuActivate = soundevent:"UI.MainMenu.Activate"
		ESocialMenuActivate = soundevent:"Citadel_UI.SocialMenu_Activate"
		EAbilityHover = soundevent:"UI.Shop.Ability.Hover"
		EShopModHover = soundevent:"UI.Shop.Mod.Hover"
		EShopModDestroy = soundevent:"UI.Shop.Item.Destroy"
		EShopModActivate = soundevent:"UI.Shop.Mod.Activate"
		EShopExitAlarm = soundevent:"UI.Shop.ExitAlarm"
		EShopExit = soundevent:"UI.Shop.Exit"
		EShopEnter = soundevent:"UI.Shop.Enter"
		EHeroCardHover = soundevent:"UI.HeroCard.Hover"
		EHeroCardActivate = soundevent:"UI.HeroCard.Activate"
		EClearRosterHover = soundevent:"UI.HeroCard.ClearRoster.Hover"
		EClearRosterActivate = soundevent:"UI.HeroCard.ClearRoster.Activate"
		EShopFilterFavoritesClicked = soundevent:"UI.Shop.Mod.Starred.Click"
		EShopFilterMagicClicked = soundevent:"UI.Shop.Mod.Magic.Click"
		EShopFilterVitalityClicked = soundevent:"UI.Shop.Mod.Vitality.Click"
		EShopFilterWeaponClicked = soundevent:"UI.Shop.Mod.Weapon.Click"
		EMainMenuPartyInvited = soundevent:"Menu.Party.Invited"
		EMainMenuPartyLeave = soundevent:"Menu.Party.Leave"
		EMainMenuPartyNewMember = soundevent:"Menu.Party.NewMember"
		EMainMenuPartyPickHeroesEnter = soundevent:"Menu.HeroSelection.Enter"
		EMainMenuPartyPickHeroesConfirm = soundevent:"Menu.HeroSelection.Complete"
		EMainMenuPartyPickHeroesExit = soundevent:"UI.Matchmake.Find"
	}
	m_mapResourceTypes = 
	{
		EResourceType_Blood = 
		{
			m_strHUDSnippetName = "blood"
			m_strCantCastOutOfResourceToken = "#CITADEL_ABILITY_INVALID_NOT_BLOOD"
		}
	}
	m_HealingReceivedSounds = 
	{
		m_strHealingInBaseLoop = soundevent:"Player.Heal.Base"
		m_strHealingInBaseToppedOff = soundevent:"Player.Heal.BaseEnd"
		m_strDirectHealing = soundevent:""
	}
	m_DamageIndicatorSounds = 
	{
		m_strDamageDefault = soundevent:"Damage.Send"
		m_strDamageCrit = soundevent:"Damage.Send.Crit"
		m_strDamageLethal = soundevent:"Damage.Send.Lethal"
		m_strDamageInvulnerable = soundevent:"Damage.Send.Invulnerable"
		m_strDamageDOT = soundevent:"Damage.Send.DOT"
		m_strDamageHealthTransfer = soundevent:"Player.Heal.SiphonTick"
	}
	m_RejuvParams = 
	{
		m_flRejuvinatorExpirationWarningTiming = 30
		m_flRejuvinatorBuffDuration = 180
		m_flRejuvinatorDropHeight = 752
		m_flRejuvinatorDropDuration = 9
		m_strRejuvPickupSound = soundevent:"Rejuv.Pickup"
	}
	m_ShoppingEffect = resource_name:"particles/generic/hero_shopping_status.vpcf"
}